using System;
using System.Text;
using System.Web.Helpers;

namespace Cosmenist.Utility.Security
{
    public enum HashType
    {
        Default, // default is RFC 2998
        SHA256,
        SHA1
    }

    public class PasswordHasher
    {
        public PasswordHasher(int generateSalt)
        {
            Crypto.GenerateSalt(generateSalt);
        }

        public string Hash(HashType hashType, string password)
        {
            switch (hashType)
            {
                case HashType.SHA1:
                    return Crypto.Hash(Encoding.UTF8.GetBytes(password), algorithm: "sha1");

                case HashType.SHA256:
                    return Crypto.Hash(Encoding.UTF8.GetBytes(password), algorithm: "sha256");

                default:
					//Hash Password
                    return Crypto.HashPassword(password);
            }
        }

        private bool SHAVerify(HashType hashType, string hashedPassword, string comparePassword)
        {
            return StringComparer.CurrentCulture
                       .Compare(
                           hashedPassword,
                           this.Hash(hashType, comparePassword)
                       ) == 0;
        }
		//Verify Password => return App.PasswordHasher.Verify(HashType.Default, loginedUser.Password, user.Password); True/false;
        public bool Verify(HashType hashType, string hashedPassword, string passwordCompare)
        {
            switch (hashType)
            {
                case HashType.Default:
                    return Crypto.VerifyHashedPassword(hashedPassword, passwordCompare);
                default:
                    return this.SHAVerify(hashType, hashedPassword, passwordCompare);
            }
        }
    }
}
